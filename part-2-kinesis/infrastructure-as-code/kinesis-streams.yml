---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Streaming Session - Part 2 - Kinesis Streams"

Parameters:
  ResourcePrefix:
    Type: "String"
    Description: "Prefix added to all created resources"
    AllowedPattern: "[a-zA-Z0-9-]+"

Resources:
  KinesisAnalyticsRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - kinesisanalytics.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: kinesisaccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:Get*
                  - kinesis:List*
                Resource:
                  - "*"
              - Sid: WriteOutputStream
                Effect: Allow
                Action:
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                  - kinesis:DescribeStream
                Resource:
                  - "*"

  CustomerStream:
    Type: "AWS::Kinesis::Stream"
    Properties: 
      Name: !Sub "${ResourcePrefix}-customer-stream"
      ShardCount: 1
      Tags: 
        - Key: "SessionName"
          Value: "Streaming"
        - Key: "SessionPart"
          Value: "2"

  CustomerOutputStream:
    Type: "AWS::Kinesis::Stream"
    Properties:
      Name: !Sub "${ResourcePrefix}-customer-output-stream"
      ShardCount: 1
      Tags: 
        - Key: "SessionName"
          Value: "Streaming"
        - Key: "SessionPart"
          Value: "2"

  CustomerStreamAnalytics:
    Type: "AWS::KinesisAnalyticsV2::Application"
    Properties: 
      ApplicationConfiguration:
        ApplicationCodeConfiguration:
          CodeContent:
            TextContent: !Sub |
              CREATE STREAM "CUSTOMER_OUTPUT" (
                MetricType VARCHAR(16),
                EventTimestamp BIGINT,
                MetricItem VARCHAR(1024),
                UnitValueInt BIGINT,
                UnitValueFloat DOUBLE
              );

              CREATE OR REPLACE PUMP "CUSTOMER_PUMP" AS
              INSERT INTO "CUSTOMER_OUTPUT" (MetricType, EventTimestamp, MetricItem, UnitValueInt)
              SELECT 'customer_city_count', UNIX_TIMESTAMP(eventTimestamp), city, city_count FROM (
                SELECT STREAM
                    customers."location_city" as city,
                    count(*) as city_count,
                    STEP (customers.ROWTIME BY INTERVAL '10' SECOND) as eventTimestamp
                FROM "CUSTOMER_STREAM_001" customers
                GROUP BY
                    customers."location_state",
                    STEP (customers.ROWTIME BY INTERVAL '10' SECOND)
              );

          CodeContentType: PLAINTEXT
        SqlApplicationConfiguration:
          Inputs:
            - InputSchema:
                RecordColumns:
                  - Mapping: "$.id"
                    Name: "id"
                    SqlType: "VARCHAR(128)"
                  - Mapping: "$.first_name"
                    Name: "first_name"
                    SqlType: "VARCHAR(128)"
                  - Mapping: "$.last_name"
                    Name: "last_name"
                    SqlType: "VARCHAR(128)"
                  - Mapping: "$.location.city"
                    Name: "location_city"
                    SqlType: "VARCHAR(128)"
                  - Mapping: "$.location.state"
                    Name: "location_state"
                    SqlType: "VARCHAR(128)"
                  - Mapping: "$.location.postcode"
                    Name: "location_postcode"
                    SqlType: "INTEGER"
                  - Mapping: "$.email"
                    Name: "email"
                    SqlType: "VARCHAR(256)"
                  - Mapping: "$.dob.age"
                    Name: "dob_age"
                    SqlType: "INTEGER"
                  - Mapping: "$.phone"
                    Name: "phone"
                    SqlType: "VARCHAR(64)"
                RecordFormat:
                  MappingParameters:
                    JSONMappingParameters:
                      RecordRowPath: "$"
                  RecordFormatType: "JSON"
              KinesisStreamsInput:
                ResourceARN: !GetAtt "CustomerStream.Arn"
              NamePrefix: "CUSTOMER_STREAM"
      ApplicationName: !Sub "${ResourcePrefix}-customer-stream-analytics"
      RuntimeEnvironment: "SQL-1_0"
      ServiceExecutionRole: !GetAtt KinesisAnalyticsRole.Arn

  CustomerStreamAnalyticsOutput:
    Type: "AWS::KinesisAnalyticsV2::ApplicationOutput"
    Properties:
      ApplicationName: !Ref CustomerStreamAnalytics
      Output:
        Name: "CUSTOMER_OUTPUT"
        DestinationSchema:
          RecordFormatType: CSV
        KinesisStreamsOutput:
          ResourceARN: !GetAtt CustomerOutputStream.Arn
